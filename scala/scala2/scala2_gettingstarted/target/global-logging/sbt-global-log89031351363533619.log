[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\isai7\AppData\Local\Temp\idea9.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\isai7\AppData\Local\Temp\idea9.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.5)
[debug]       Load.loadUnit: plugins took 177.8345ms
[debug]       Load.loadUnit: defsScala took 0.7202ms
[debug] [Loading] Scanning directory C:\Users\isai7\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isai7\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.8365 ms
[debug]           Load.resolveProject(global-plugins) took 45.1196ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\isai7\.sbt\1.0\plugins, plugins: List(<none>))) took 82.8256ms
[debug] [Loading] Done in C:\Users\isai7\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 106.6399ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2051ms
[debug]     Load.loadUnit(file:/C:/Users/isai7/.sbt/1.0/plugins/, ...) took 298.5846ms
[debug]   Load.apply: load took 508.2092ms
[debug]   Load.apply: resolveProjects took 6.472ms
[debug]   Load.apply: finalTransforms took 72.0918ms
[debug]   Load.apply: config.delegates took 8.6873ms
[debug]   Load.apply: Def.make(settings)... took 627.7514ms
[debug]   Load.apply: structureIndex took 119.6208ms
[debug]   Load.apply: mkStreams took 2.1263ms
[info] loading global plugins from C:\Users\isai7\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3003.6444ms
[debug]           Load.loadUnit: plugins took 48.3549ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project
[debug]             Load.loadUnit: mkEval took 6.2494ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7073 ms
[info] loading settings for project scala2_gettingstarted-build from idea9.sbt ...
[debug]               Load.resolveProject(scala2_gettingstarted-build) took 3.9515ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala2_gettingstarted-build, base: C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project, plugins: List(<none>))) took 7.4587ms
[debug] [Loading] Done in C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project, returning: (scala2_gettingstarted-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 182.0154ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.3663ms
[debug]         Load.loadUnit(file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/project/, ...) took 239.8165ms
[debug]       Load.apply: load took 241.6463ms
[debug]       Load.apply: resolveProjects took 0.1366ms
[debug]       Load.apply: finalTransforms took 8.9821ms
[debug]       Load.apply: config.delegates took 0.3513ms
[debug]       Load.apply: Def.make(settings)... took 117.3165ms
[debug]       Load.apply: structureIndex took 34.8052ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 857.9016ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted
[debug]       Load.loadUnit: mkEval took 0.2732ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2341 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 35.6659ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted, plugins: List(<none>))) took 39.5299ms
[debug] [Loading] Done in C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 129.4779ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.7136ms
[debug]   Load.loadUnit(file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/, ...) took 1002.1988ms
[debug] Load.apply: load took 1004.0267ms
[debug] Load.apply: resolveProjects took 0.1428ms
[debug] Load.apply: finalTransforms took 43.7105ms
[debug] Load.apply: config.delegates took 0.329ms
[debug] Load.apply: Def.make(settings)... took 138.9477ms
[debug] Load.apply: structureIndex took 29.5959ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to scala2_gettingstarted (in build file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58174 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58174, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala2_gettingstarted (in build file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/)
[debug] > Exec(idea-shell, None, None)
