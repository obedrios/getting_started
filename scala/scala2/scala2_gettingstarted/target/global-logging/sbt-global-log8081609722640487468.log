[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\isai7\AppData\Local\Temp\idea5.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\isai7\AppData\Local\Temp\idea5.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.5)
[debug]       Load.loadUnit: plugins took 220.6688ms
[debug]       Load.loadUnit: defsScala took 0.5972ms
[debug] [Loading] Scanning directory C:\Users\isai7\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isai7\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.0616 ms
[debug]           Load.resolveProject(global-plugins) took 46.0866ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\isai7\.sbt\1.0\plugins, plugins: List(<none>))) took 87.2826ms
[debug] [Loading] Done in C:\Users\isai7\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 116.5988ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.268ms
[debug]     Load.loadUnit(file:/C:/Users/isai7/.sbt/1.0/plugins/, ...) took 351.333ms
[debug]   Load.apply: load took 592.9075ms
[debug]   Load.apply: resolveProjects took 9.3655ms
[debug]   Load.apply: finalTransforms took 76.2542ms
[debug]   Load.apply: config.delegates took 9.864ms
[debug]   Load.apply: Def.make(settings)... took 754.7095ms
[debug]   Load.apply: structureIndex took 163.9645ms
[debug]   Load.apply: mkStreams took 3.5539ms
[info] loading global plugins from C:\Users\isai7\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3343.0782ms
[debug]           Load.loadUnit: plugins took 31.1876ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project
[debug]             Load.loadUnit: mkEval took 5.1167ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.4134 ms
[info] loading settings for project scala2_gettingstarted-build from idea5.sbt ...
[debug]               Load.resolveProject(scala2_gettingstarted-build) took 7.4292ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala2_gettingstarted-build, base: C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project, plugins: List(<none>))) took 11.552ms
[debug] [Loading] Done in C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project, returning: (scala2_gettingstarted-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 186.4387ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.0644ms
[debug]         Load.loadUnit(file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/project/, ...) took 228.7349ms
[debug]       Load.apply: load took 230.3599ms
[debug]       Load.apply: resolveProjects took 0.0932ms
[debug]       Load.apply: finalTransforms took 10.9998ms
[debug]       Load.apply: config.delegates took 0.4992ms
[debug]       Load.apply: Def.make(settings)... took 149.8138ms
[debug]       Load.apply: structureIndex took 30.1609ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 908.9493ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted
[debug]       Load.loadUnit: mkEval took 0.2577ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2602 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 62.0631ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted, plugins: List(<none>))) took 66.2033ms
[debug] [Loading] Done in C:\Users\isai7\Projects\IdeaProjects\scala2_gettingstarted, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 166.1878ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.0127ms
[debug]   Load.loadUnit(file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/, ...) took 1091.1693ms
[debug] Load.apply: load took 1092.9474ms
[debug] Load.apply: resolveProjects took 0.1092ms
[debug] Load.apply: finalTransforms took 29.6293ms
[debug] Load.apply: config.delegates took 0.2888ms
[debug] Load.apply: Def.make(settings)... took 114.3958ms
[debug] Load.apply: structureIndex took 33.8508ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to scala2_gettingstarted (in build file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58174 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58174, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala2_gettingstarted (in build file:/C:/Users/isai7/Projects/IdeaProjects/scala2_gettingstarted/)
[debug] > Exec(idea-shell, None, None)
